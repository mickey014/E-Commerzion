name: E-Commerzion - Main Branch

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Ensure dev branch is updated
      - name: Update dev branch
        run: |
          git fetch origin dev
          git checkout dev
          git pull origin dev

      # Step 3: Check if features branch is merged into dev
      - name: Check branch merge status
        run: |
          git fetch origin dev
          if ! git merge-base --is-ancestor origin/dev HEAD; then
            echo "This branch must be merged into 'dev' before being merged into 'main'."
            exit 1
          fi

      # Step 4: Set up Docker CLI Compose plugin
      - name: Set up Docker CLI Compose plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.31.1/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Step 5: Run Docker Compose
      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.prod.yml up -d
        env:
          DOCKER_BUILDKIT: 1  # Enable BuildKit for optimized builds

      # Step 6: Integration Test
      - name: Run Integration Tests
        run: mvn clean -B test -Dtest=IntegrationTesting/* --projects seller-service
        working-directory: user-product-service

      # Step 7: Cleanup (Optional but recommended)
      - name: Clean up Docker Compose
        if: always()
        run: |
          docker compose -f docker-compose.prod.yml down
