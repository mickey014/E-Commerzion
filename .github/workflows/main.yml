name: E-Commerzion - Main Branch

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      # - name: Checkout repository
        # uses: actions/checkout@v3

      # Step 2: Ensure dev branch is updated
      # - name: Update dev branch
        # run: |
          # git fetch origin dev
          # git checkout dev
          # git pull origin dev

      # Step 3: Check if features branch is merged into dev
      # - name: Check branch merge status
        # run: |
          # git fetch origin dev
          # if ! git merge-base --is-ancestor origin/dev HEAD; then
            # echo "This branch must be merged into 'dev' before being merged into 'main'."
            # exit 1
          # fi

      - name: Install Docker (official script)
        run: |
            sudo curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo systemctl enable docker
            sudo systemctl start docker
        
      # Step 5: Run Docker Compose
      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.prod.yml up -d
        env:
          DOCKER_BUILDKIT: 1  # Enable BuildKit for optimized builds
          
      - name: Install Java 17
        run: |
          sudo apt install -y openjdk-17-jdk
          
      - name: Set JAVA_HOME for Maven
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
          source /etc/environmentnt
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          mvn clean -B test -Dtest=IntegrationTesting/* --projects seller-service
        working-directory: user-product-service  # Replace with your correct directory  

      # - name: Set JAVA_HOME for Maven
        # run: |
          # echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
          # source /etc/environmentnt
          # export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          # export PATH=$JAVA_HOME/bin:$PATH
          # java -version
          # mvn clean -B test -Dtest=IntegrationTesting/* --projects seller-service
        # working-directory: user-product-service  # Replace with your correct directory  
        

      # Step 7: Cleanup (Optional but recommended)
      - name: Clean up Docker Compose
        if: always()
        run: |
          docker compose -f docker-compose.prod.yml down
