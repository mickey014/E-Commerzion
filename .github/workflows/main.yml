name: E-Commerzion - Main Branch

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update dev branch
        run: |
          git fetch origin dev
          git checkout dev
          git pull origin dev

      - name: Check if features branch is merged into dev
        run: |
          # Fetch latest changes from the dev branch
          git fetch origin dev
          
          # Check if the current branch is merged into dev
          if ! git merge-base --is-ancestor origin/dev HEAD; then
            echo "This branch must be merged into 'dev' before being merged into 'main'."
            exit 1
          fi
         
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Pull postgres:14-alpine
        run: docker pull postgres:14-alpine

      - name: Tag the image
        run: docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-user-service-db

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-user-service-db

      - name: Build and Push User Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .  # Set the context to the root directory of the repository (user-product-service)
          file: user-product-service/user-service/Dockerfile.users  # Path to the Dockerfile inside user-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-user-service-app:latest
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag the image
        run: docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-seller-service-db

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-seller-service-db

      - name: Build and Push Seller Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .  # Set the context to the root directory of the repository (user-product-service)
          file: user-product-service/seller-service/Dockerfile.sellers  # Path to the Dockerfile inside sellers-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-seller-service-app:latest
