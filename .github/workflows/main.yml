name: E-Commerzion - Main Branch

on:
  pull_request:
    branches:
      - main

jobs:
  integration-testing:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Ensure dev branch is updated
      - name: Update dev branch
        run: |
          git fetch origin dev
          git checkout dev
          git pull origin dev
  
      - name: Install Docker (official script)
        run: |
            sudo curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo systemctl enable docker
            sudo systemctl start docker
            docker --version
        
      # Step 5: Run Docker Compose
      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.prod.yml up -d
        env:
          DOCKER_BUILDKIT: 1  # Enable BuildKit for optimized builds
          
      - name: Install Java 17
        run: |
          sudo apt install -y openjdk-17-jdk
          
      - name: Run UserService Integration Tests
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
          source /etc/environment
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          mvn clean -B test -Dtest=IntegrationTesting/* --projects user-service
        working-directory: user-product-service  # Replace with your correct directory  
        
      # - name: Wait for user-service-app to be ready
        # run: |
          # while ! curl --silent --fail http://user-service-app:8001/api/v1/users/1; do
            # echo "Waiting for user-service-app to be ready..."
            # sleep 5
          # done
      # - name: Wait for user-service-app to be ready
        # run: |
          # while ! curl --silent --fail http://user-service-app:8001/api/v1/users/1; do
            # echo "Waiting for user-service-app to be ready..."
            # sleep 5
          # done

      - name: Run SellerService Integration Tests
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
          source /etc/environment
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          echo "127.0.0.1 user-service-app" | sudo tee -a /etc/hosts
          curl -X POST http://user-service-app:8001/api/v1/users/register \
            -H "Content-Type: application/json" \
            -d '{
                "name": "Kirk Mendoza",
                "username": "kirkmendoza9@gmail.com",
                "password": "test",
                "confirmPassword": "test"
            }'
          mvn clean -B test -Dtest=IntegrationTesting/* --projects seller-service
        working-directory: user-product-service  # Replace with your correct directory  
        
      # Step 7: Cleanup (Optional but recommended)
      - name: Clean up Docker Compose
        if: always()
        run: |
          docker compose -f docker-compose.prod.yml down
