name: Deploy to Production

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Ensure dev branch is updated
      - name: Update dev branch
        run: |
          git fetch origin dev
          git checkout dev
          git pull origin dev

      # Step 3: Check if features branch is merged into dev
      - name: Check branch merge status
        run: |
          git fetch origin dev
          if ! git merge-base --is-ancestor origin/dev HEAD; then
            echo "This branch must be merged into 'dev' before being merged into 'main'."
            exit 1
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Pull RabbitMQ Image
        run: docker pull rabbitmq:3.9.11-management-alpine
          
      - name: Tag and Push RabbitMQ Image
        run: |
          docker tag rabbitmq:3.9.11-management-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-rabbitmq
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-rabbitmq

      - name: Pull postgres:14-alpine
        run: docker pull postgres:14-alpine

      - name: Tag and Push PostgreSQL Image for User Service
        run: |
          docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-user-service-db
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-user-service-db

      - name: Build and Push User Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: user-product-service/user-service/Dockerfile.users
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-user-service-app:latest

      - name: Tag and Push PostgreSQL Image for Seller Service
        run: |
          docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-seller-service-db
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-seller-service-db

      - name: Build and Push Seller Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: user-product-service/seller-service/Dockerfile.sellers
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-seller-service-app:latest
          
      - name: Tag and Push PostgreSQL Image for Product Service
        run: |
          docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-product-service-db
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-product-service-db
          
      - name: Build and Push Product Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: user-product-service/product-service/Dockerfile.products
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-product-service-app:latest
          
      - name: Tag and Push PostgreSQL Image for Order Service
        run: |
          docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-order-service-db
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-order-service-db
          
      - name: Build and Push Order Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: user-product-service/order-service/Dockerfile.orders
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-order-service-app:latest
          
      - name: Tag and Push PostgreSQL Image for Order Items Service
        run: |
          docker tag postgres:14-alpine ${{ secrets.DOCKER_USERNAME }}/e-commerzion-order-items-service-db
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerzion-order-items-service-db
          
      - name: Build and Push Order Items Service Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: user-product-service/order-items-service/Dockerfile.orderItems
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/e-commerzion-order-items-service-app:latest
