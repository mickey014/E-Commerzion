name: E-Commerzion - Dev Branch

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  user-service:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_DB: user_service
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres -d user_service"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Configure Database URL
      - name: Configure database connection
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/user_service" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=test" >> $GITHUB_ENV

      # Step 4: Wait for PostgreSQL
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      # Step 5: Build User Service
      - name: Build User Service
        run: mvn -B clean verify --projects user-service
        working-directory: user-product-service
        
  seller-service:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_DB: seller_service
        ports:
          - "5433:5432"
        options: >-
          --health-cmd="pg_isready -U postgres -d seller_service"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Configure Database URL
      - name: Configure Seller Service database connection
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5433/seller_service" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=test" >> $GITHUB_ENV

      # Step 4: Wait for PostgreSQL
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5433 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
          
      # Step 5: Pull and Run user-service container
      - name: Pull user-service image
        run: docker pull kirk006/e-commerzion-user-service-app:latest

      - name: Run user-service container
        run: |
          docker run -d --name user-service --network=host -p 8001:8001 kirk006/e-commerzion-user-service-app:latest
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/user_service
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: test
          
      # Step 6: Configure Feign Client for user-service
      - name: Configure Feign Client for user-service
        run: |
          echo "external.api.userService.hostUrl=http://user-service:8001/api/v1" >> $GITHUB_ENV

      # Step 7: Build Seller Service
      - name: Build Seller Service
        run: mvn -B clean verify --projects seller-service
        working-directory: user-product-service
