name: E-Commerzion - Dev Branch

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  e-commerzion-services:
    runs-on: ubuntu-latest

    services:
      postgres-user-service:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_DB: user_service
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d user_service"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      postgres-seller-service:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_DB: seller_service
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d seller_service"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Test Database Connectivity (User Service)
        run: |
          echo "Testing connection to user_service database..."
          until pg_isready -h localhost -p 5432 -U postgres -d user_service; do
            echo "Waiting for PostgreSQL user_service database to be ready..."
            sleep 5
          done

      - name: Build User Service
        run: mvn -B clean verify --projects user-service
        working-directory: user-product-service

      - name: Configure Seller Service Database Connection
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5433/seller_service" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=test" >> $GITHUB_ENV

      - name: Test Database Connectivity (Seller Service)
        run: |
          echo "Testing connection to seller_service database..."
          until pg_isready -h localhost -p 5433 -U postgres -d seller_service; do
            echo "Waiting for PostgreSQL seller_service database to be ready..."
            sleep 5
          done

      - name: Build Seller Service
        run: mvn -B clean verify --projects seller-service
        working-directory: user-product-service

      - name: Pull and Run User Service App
        run: |
          docker pull kirk006/e-commerzion-user-service-app:latest
          docker network create e-commerzion-network || true
          docker run -d --name user-service-app --network e-commerzion-network -p 8001:8001 \
            kirk006/e-commerzion-user-service-app:latest

      - name: Clean Up Docker Containers
        run: |
          docker stop user-service-app || true
          docker rm user-service-app || true
